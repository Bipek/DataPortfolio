Select*
from coviddeaths
where continent is not null
order by 3,4;


select location, date, total_cases, new_cases, total_deaths, population
from coviddeaths
order by 1,2;

-- looking at total cases vs total deaths
-- shows percentage of people that died from those who contracted covid in your country
select location, date, total_cases,total_deaths, (total_deaths::float/total_cases)*100 as death_percentage
from coviddeaths
where location like '%States%'
order by 1,2;


-- total cases vs population
--percentage of population that got covid
select location, date, total_cases,population, (total_cases::float/population)*100 as confirmed_covid_cases
from coviddeaths
where location like '%States'
order by 1,2;

-- Countries with Highest Infection Rate compared to Population

select location, population, MAX(total_cases) as highest_infection_count,
MAX((total_cases::float/population))*100 as percent_population_infected
from coviddeaths
--where location like '%States%'
group by location, population
order by percent_population_infected desc;

-- Countries with highest death count per population
select location, MAX(total_deaths) as total_death_count
from coviddeaths
--where location like '%States%'
where continent is not null
group by location
order by total_death_count desc;

--break down by continent
select continent, MAX(total_deaths) as total_death_count
from coviddeaths
--where location like '%States%'
where continent is not null
group by continent
order by total_death_count desc;

--Global Numbers

--across the world till the present
select SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases)*100 as death_percentage
from coviddeaths
--where location like '%States%'
where continent is  not null
--group by date
order by 1,2;

--- Looking at Total Pop vs Vaccinations
select d.continent, d.location, d.date, d.population, v.new_vaccinations,
SUM(v.new_vaccinations) OVER (Partition by d.location order by d.date) as RollingPeopleVaccinated
from coviddeaths as d
join covidvaccinations as v
	on d.location = v.location
	and d.date = v.date
where d.continent is not null
order by 2,3;

--USE CTE
with PopsvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as (
select d.continent, d.location, d.date, d.population, v.new_vaccinations,
SUM(v.new_vaccinations) OVER (Partition by d.location order by d.date) as RollingPeopleVaccinated
from coviddeaths as d
join covidvaccinations as v
	on d.location = v.location
	and d.date = v.date
where d.continent is not null
--order by 2,3
)
Select*, (RollingPeopleVaccinated/Population)*100
from PopsvsVac;

--Temp Table

DROP TABLE IF exists PercentPopulationVaccinated

Create Table PercentPopulationVaccinated
(
	continent varchar(255),
  	location varchar(255),
 	date date, 
	population numeric,
 	new_vaccinations numeric, 
 	RollingPeopleVaccinated numeric
)
 
Insert into PercentPopulationVaccinated
select d.continent, d.location, d.date, d.population, v.new_vaccinations,
	SUM(v.new_vaccinations) OVER (Partition by d.location order by d.date) as RollingPeopleVaccinated
from coviddeaths as d
join covidvaccinations as v
	on d.location = v.location
	and d.date = v.date
where d.continent is not null

Select*, (RollingPeopleVaccinated/Population)*100
from PercentPopulationVaccinated;

--Creating View to store data for visualizations

Create View PercentPopulationVaccinated as
select d.continent, d.location, d.date, d.population, v.new_vaccinations,
	SUM(v.new_vaccinations) OVER (Partition by d.location order by d.date) as RollingPeopleVaccinated
from coviddeaths as d
join covidvaccinations as v
	on d.location = v.location
	and d.date = v.date
where d.continent is not null

select* 
from PercentPopulationVaccinated 








